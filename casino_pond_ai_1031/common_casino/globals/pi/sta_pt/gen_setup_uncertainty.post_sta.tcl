###############################################################################
#
#  FILE:    gen_setup_uncertainty.tcl
#
#  ABSTRACT:    This script is intended to generate setup margin according to 
#        clock period
#        
#  USAGE:       pt_shell> source gen_setup_uncertainty.tcl
#               pt_shell> gen_setup_uncertainty -ratio 0.03 -setup_extra_margin 0.0 \ 
#                                               -out setup_uncert.tcl
#               pt_shell> source setup_uncert.tcl
#
#  AUTHOR:    E.-C. Jun,  Chul Rim
#
#  HISTORY:    07/11/27    Release 
#               11/02/24    skip internal clock (clock with no period)
#               11/05/13    support -add / -ratio options
#
###############################################################################

# SCRIPT_PROTECT_BLOCK_BEGIN

global gen_setup_uncertainty
global verbose_mode
global debug_mode

set gen_setup_uncertainty_version "1.2 (2011.5.13)"

# Define the % of setup uncertainty margin depends on clock period

proc gen_setup_uncertainty { args } {
  global gen_setup_uncertainty_version verbose_mode debug_mode
  global setup_extra_margin

  ;# setup_uncertainty = 0.03 * $period + $setup_extra_margin
  set ratio_to_period  0.03 ;# 3% as default
  #set setup_extra_margin            0.00  ;# setup_extra_margin fixed margin
  set max_bound        2.0  ;# max bounded by 1.6ns for low freq clocks
  set verbose_mode     0
  set debug_mode       0    

  parse_proc_arguments -args $args results
  foreach argname [array names results] {
    switch -glob -- $argname {
      "-ratio" {
    set ratio_to_period     $results($argname)
      }
      "-add" {
    set setup_extra_margin         $results($argname)
      }
      "-max_bound" {
    set max_bound         $results($argname)
      }
      "-verbose" {
    set verbose_mode        1
      }
      "output_file" {
    set out_file        $results(output_file)
      }
    }
  }

  set FO [open $out_file "w"]
  puts $FO "################################################################################"
  puts $FO "# This file is generated by gen_setup_uncertainty.tcl (V$gen_setup_uncertainty_version)"
  puts $FO "#"
  puts $FO "# NOTICE: Following results are generated by simple proportion method and the"
  puts $FO "#         generated value might be insufficient for high-frequency clocks."
  puts $FO "#         So one should use the result on his/her own responsibliity" 
  puts $FO "#         Refer to \"Jitter Estimator\" for more reliable setup uncertainty"
  puts $FO "#         for high-frequency clocks faster than 500MHz"
  puts $FO "################################################################################"
  puts $FO ""
  
  foreach_in_collection clk [get_clocks *] {
    set period [get_attribute -quiet $clk period]
    if { $period == "" } {
      echo "** SEC_WARN: skipping a clock with no period - [get_object_name $clk]"
      continue
    }
    set setup_uncert     [expr ($period * $ratio_to_period) + $setup_extra_margin]
    if {$setup_uncert > $max_bound} {
      set setup_uncert $max_bound
    } 
    set period_str     [expr $ratio_to_period * 100.0]
    puts $FO "# calculated as (${period_str}% of period) + setup_extra_margin = ($ratio_to_period * ${period}) + $setup_extra_margin"
    puts $FO "set_clock_uncertainty -setup $setup_uncert \t \[get_clocks [get_object_name $clk]\]"
    puts $FO ""
  }
  close $FO
  echo "** SEC_INFO: setup clock unertainty file is generated - $out_file"
}


define_proc_attributes gen_setup_uncertainty \
    -info "Generate setup unceratinty margin scripts" \
    -define_args {
      {output_file "output file name" "output_file" string required}
      {-ratio      "ratio of clock period (default = 0.03, 3%)" "<value>" float optional}
      {-max_bound  "maximum uncertainty bounded by (default = 2.0, ns)" "<value>" float optional}
      {-add        "add fixed amount to given ratio (default = 0.0)" "<value>" float optional}
      {-verbose    "enable verbose message" "" boolean optional}
    }

# SCRIPT_PROTECT_BLOCK_END
